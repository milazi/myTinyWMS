name: continuous integration

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        continue-on-error: false
        
      - name: Prepare test environment
        run: |
          docker-compose --file docker-compose.test.yml up -d
          sleep 10
          docker exec -w /data/www wms_app mkdir /data/www/storage/attachments
          docker exec -w /data/www wms_app mkdir -p /data/www/storage/framework/cache/data
          docker exec -w /data/www wms_app chmod -R 777 /data/www/storage
          docker exec -w /data/www wms_app chmod -R 777 /data/www/storage/framework/cache/data
          docker exec -w /data/www wms_app chmod -R 777 /data/www/tests/Browser/screenshots
          docker exec -w /data/www wms_app composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          docker exec -w /data/www wms_app npm run prod

      - name: Run unit tests
        run: |
          docker exec -w /data/www wms_app php artisan create:testdb
          docker exec -w /data/www wms_app /data/www/vendor/bin/phpunit

      - name: Run dusk tests
        run: |
          docker exec -w /data/www wms_app php artisan create:testdb
          docker exec -w /data/www wms_app php artisan dusk

      - name: Upload dusk screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: data/screenshots

      - name: Upload dusk console log
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: console
          path: data/console

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    #needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
        - uses: actions/checkout@master
        - name: Publish to Registry
          uses: jerray/publish-docker-action@master
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            registry: docker.io
            repository: mytinywms/mytinywms
            auto_tag: true
